# Generated by Django 4.2.11 on 2024-05-23 06:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workshops', '0001_initial'),
        ('devices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AirQualityDatapoint',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('time', models.DateTimeField()),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('location_precision', models.FloatField(blank=True, null=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.device')),
            ],
        ),
        migrations.CreateModel(
            name='MobilityMode',
            fields=[
                ('name', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('pm1', models.FloatField(blank=True, help_text='Particulate matter 1 microns', null=True)),
                ('pm25', models.FloatField(blank=True, help_text='Particulate matter 2.5 microns', null=True)),
                ('pm10', models.FloatField(blank=True, help_text='Particulate matter 10 microns', null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('voc_index', models.FloatField(blank=True, help_text='Volatile organic compound index', null=True)),
                ('nox_index', models.FloatField(blank=True, help_text='Nitrogen oxides index', null=True)),
                ('co2', models.FloatField(blank=True, help_text='Carbondioxid', null=True)),
                ('o3', models.FloatField(blank=True, help_text='Ground-level Ozone', null=True)),
                ('iaq_index', models.FloatField(blank=True, null=True)),
                ('iaq_acc', models.SmallIntegerField(blank=True, null=True)),
                ('iaq_static', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('datapoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.airqualitydatapoint')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='AirQualityRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('pm1', models.FloatField(blank=True, null=True)),
                ('pm25', models.FloatField(blank=True, null=True)),
                ('pm10', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('voc', models.FloatField(blank=True, null=True)),
                ('nox', models.FloatField(blank=True, null=True)),
                ('co2', models.FloatField(blank=True, null=True)),
                ('o3', models.FloatField(blank=True, null=True)),
                ('iaq_index', models.FloatField(blank=True, null=True)),
                ('iaq_acc', models.SmallIntegerField(blank=True, null=True)),
                ('iaq_static', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('location_precision', models.FloatField(blank=True, null=True)),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.device')),
                ('mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.mobilitymode')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workshops.participant')),
                ('workshop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workshops.workshop')),
            ],
        ),
        migrations.AddField(
            model_name='airqualitydatapoint',
            name='mode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.mobilitymode'),
        ),
        migrations.AddField(
            model_name='airqualitydatapoint',
            name='participant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshops.participant'),
        ),
        migrations.AddField(
            model_name='airqualitydatapoint',
            name='workshop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshops.workshop'),
        ),
    ]
